#N canvas 244 203 1130 679 10;
#X obj 83 189 inlet~;
#X obj 208 568 outlet;
#X obj 83 218 tabsend~ \$0-entrada;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-entrada 64 float 2;
#X coords 0 1 64 -1 200 140 1 0 0;
#X restore 26 26 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-memoria 1 float 2;
#X coords 0 1 1 -1 200 140 1 0 0;
#X restore 246 26 graph;
#X obj 261 271 bang~;
#X obj 307 369 timer;
#X obj 307 398 * 44.1;
#X obj 307 427 select;
#X floatatom 360 415 5 0 0 0 - - -;
#X obj 288 319 t b b b;
#N canvas 208 297 496 433 realoca_vetores 0;
#X obj 116 118 f \$0;
#X obj 114 80 t b f;
#X msg 137 260 \; \$1 resize \$2;
#X obj 123 184 pack s f;
#X msg 139 218 s \$1 \$2;
#X obj 114 53 inlet;
#X text 45 22 Inlet 1: Tamanho novo dos vetores;
#X text 40 310 As mensagens são do tipo: s <nome_do_vetor> <novo_tamanho>
;
#X obj 289 267 print Realocou_vetor;
#X msg 123 154 \$1-entrada;
#X connect 0 0 9 0;
#X connect 1 0 0 0;
#X connect 1 1 3 1;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 4 0 8 0;
#X connect 5 0 1 0;
#X connect 9 0 3 0;
#X restore 389 528 pd realoca_vetores;
#X obj 433 415 r N_INICIAL;
#X text 381 389 O select é responsável por chamar o realoca_vetores
apenas quando o N muda.;
#N canvas 114 319 600 475 primeira_ou_segunda 0;
#X text 324 198 Todos os outros passam por aqui.;
#X text -20 204 Somente o primeiro bang passa por aqui.;
#X obj 198 20 inlet;
#X obj 248 21 inlet;
#X msg 299 97 0;
#X msg 266 97 1;
#X obj 251 131 float;
#X obj 200 54 t b b;
#X obj 251 159 sel 0;
#X obj 231 200 outlet;
#X obj 281 200 outlet;
#X text 106 21 Inlet 1: Bang;
#X text 296 21 Inlet 2: Reset;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 6 1;
#X connect 5 0 6 1;
#X connect 6 0 8 0;
#X connect 7 0 5 0;
#X connect 7 1 6 0;
#X connect 8 0 9 0;
#X connect 8 1 10 0;
#X restore 229 298 pd primeira_ou_segunda;
#X obj 229 327 t b b;
#X text 370 340 Na primeira vez \, seta o timer e conta_ate_X;
#X obj 410 492 print contando_ate;
#X obj 356 271 r reset;
#N canvas 500 582 450 300 contador 0;
#X obj 40 29 inlet;
#X obj 132 31 inlet;
#X obj 106 128 outlet;
#X text 23 11 Bang inicial;
#X obj 91 62 Uzi;
#X obj 106 97 - 1;
#X text 103 11 Altera valor maximo;
#X connect 0 0 4 0;
#X connect 1 0 4 1;
#X connect 4 2 5 0;
#X connect 5 0 2 0;
#X restore 227 503 pd contador;
#X obj 650 153 s N_INICIAL;
#X text 484 82 Seta o tamanho inicial do bloco;
#N canvas 879 389 450 300 dsp_ligou 0;
#X obj 50 57 r pd;
#X obj 50 82 unpack s f;
#X obj 50 106 sel dsp;
#X obj 50 132 f;
#X obj 50 183 outlet;
#X text 52 24 Libera um bang sempre que o DSP liga;
#X obj 50 157 sel 1;
#X obj 120 159 print mensagem;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 3 1;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 6 0 4 0;
#X restore 548 125 pd dsp_ligou;
#X obj 549 159 s reset;
#X msg 650 124 64;
#N canvas 596 195 727 590 calcula_rms 0;
#X obj 33 202 inlet;
#X obj 279 707 outlet;
#X msg 132 121 set \$1;
#X obj 118 74 f \$0;
#X obj 119 39 loadbang;
#X text 34 12 Inicializa nomes dos vetores;
#X msg 132 97 s \$1-entrada;
#X obj 308 293 tabread;
#X obj 319 266 r seta_x;
#X obj 132 150 send seta_x;
#X obj 116 171 print setou_x;
#X obj 354 38 + 1;
#X obj 352 65 mod;
#X obj 318 98 print contador;
#X obj 310 65 t f f;
#X obj 367 362 tabwrite;
#X msg 28 121 set \$1;
#X msg 28 97 s \$1-memoria;
#X obj 28 150 send seta_mem;
#X obj 12 171 print setou_mem;
#X obj 117 266 s atualiza_contador;
#X obj 309 17 r atualiza_contador;
#X obj 309 40 int;
#X obj 550 552 float;
#X obj 389 64 f \$1;
#X obj 389 38 loadbang;
#X obj 310 121 send seta_indice;
#X obj 450 328 r seta_indice;
#X text 501 550 x(n):;
#X obj 491 136 r seta_indice;
#X obj 476 229 tabread;
#X obj 369 550 float;
#X text 319 551 x(n-M):;
#X obj 476 166 int;
#X text 401 166 Indice(mem);
#X obj 493 187 r seta_mem;
#X obj 335 427 r calcula;
#X obj 266 550 float;
#X text 215 528 RMS(n-1): (atual);
#X obj 335 464 t b b b b;
#X obj 144 550 f \$1;
#X text 23 551 Tamanho da memoria:;
#X obj 281 661 t f f;
#X obj 115 380 s calcula;
#X obj 378 329 r seta_mem;
#X obj 476 118 r le_mem;
#X obj 118 301 s le_mem;
#X obj 307 246 r le_x_e_escreve_mem;
#X obj 115 338 s le_x_e_escreve_mem;
#X obj 312 320 t f f;
#X obj 35 234 t b f b b;
#X obj 247 361 send seta_valor_x;
#X obj 476 261 send seta_valor_x(n-M);
#X obj 396 515 r seta_valor_x(n-M);
#X obj 577 520 r seta_valor_x;
#X obj 379 306 print x;
#X obj 176 621 expr sqrt(($f2 * $f2) + ((($f4 * $f4) - ($f3 * $f3))
/ \$1) );
#X obj 551 240 print mem;
#X connect 0 0 50 0;
#X connect 2 0 9 0;
#X connect 2 0 10 0;
#X connect 3 0 6 0;
#X connect 3 0 17 0;
#X connect 4 0 3 0;
#X connect 6 0 2 0;
#X connect 7 0 49 0;
#X connect 8 0 7 0;
#X connect 11 0 12 0;
#X connect 12 0 22 1;
#X connect 14 0 26 0;
#X connect 14 1 11 0;
#X connect 16 0 18 0;
#X connect 16 0 19 0;
#X connect 17 0 16 0;
#X connect 21 0 22 0;
#X connect 22 0 14 0;
#X connect 23 0 56 3;
#X connect 24 0 12 1;
#X connect 25 0 24 0;
#X connect 27 0 15 1;
#X connect 29 0 33 1;
#X connect 30 0 52 0;
#X connect 31 0 56 2;
#X connect 33 0 30 0;
#X connect 35 0 30 0;
#X connect 36 0 39 0;
#X connect 37 0 56 1;
#X connect 39 0 40 0;
#X connect 39 1 37 0;
#X connect 39 2 31 0;
#X connect 39 3 23 0;
#X connect 40 0 56 0;
#X connect 42 0 1 0;
#X connect 42 1 37 1;
#X connect 44 0 15 0;
#X connect 45 0 33 0;
#X connect 47 0 7 0;
#X connect 49 0 51 0;
#X connect 49 1 15 0;
#X connect 50 0 43 0;
#X connect 50 1 48 0;
#X connect 50 2 46 0;
#X connect 50 3 20 0;
#X connect 53 0 31 1;
#X connect 54 0 23 1;
#X connect 56 0 42 0;
#X restore 208 544 pd calcula_rms;
#X obj 360 443 t f f f f;
#X obj 844 99 f \$1;
#X obj 333 512 +;
#X obj 709 26 loadbang;
#X obj 874 179 s M;
#X obj 355 482 r M;
#X obj 433 444 t f f;
#X obj 748 121 f \$0;
#X msg 755 157 \$1-memoria;
#X msg 749 287 \; \$1 resize \$2;
#X msg 751 245 s \$1 \$2;
#X obj 811 333 print Realocou_vetor;
#X obj 708 73 t b b b b;
#X obj 753 203 pack s f;
#X obj 865 129 t f f;
#X text 44 545 A magica acontece aqui ->;
#X connect 0 0 2 0;
#X connect 5 0 14 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 1 9 0;
#X connect 9 0 8 1;
#X connect 9 0 26 0;
#X connect 10 0 19 0;
#X connect 10 1 6 0;
#X connect 10 2 6 1;
#X connect 12 0 32 0;
#X connect 14 0 15 0;
#X connect 14 1 10 0;
#X connect 15 0 19 0;
#X connect 15 1 6 0;
#X connect 18 0 14 1;
#X connect 19 0 25 0;
#X connect 22 0 23 0;
#X connect 24 0 20 0;
#X connect 25 0 1 0;
#X connect 26 0 19 1;
#X connect 26 1 28 0;
#X connect 26 2 11 0;
#X connect 26 3 17 0;
#X connect 27 0 40 0;
#X connect 29 0 38 0;
#X connect 31 0 28 1;
#X connect 32 1 9 0;
#X connect 33 0 34 0;
#X connect 34 0 39 0;
#X connect 36 0 37 0;
#X connect 36 0 35 0;
#X connect 38 0 23 0;
#X connect 38 1 24 0;
#X connect 38 2 33 0;
#X connect 38 3 27 0;
#X connect 39 0 36 0;
#X connect 40 0 39 1;
#X connect 40 1 30 0;
